
CATEGORIES
expression, definition,statement, type

NODES
Program -> definitions:definition*;


VarDefinition:definition -> type name:string;
FunctionDefinition:definition -> name:string parameters:variable* returnType:type localDefs:varDefinition*  statements:statement*;
StructDefinition:definition ->name:string fields:variable*;


IntType:type -> ;
FloatType:type -> ;
CharType:type -> ;
ArrayType:type -> dimensions:IntValue* type;
StructType:type -> name:string;

Print:statement -> expression variant:string;
Read:statement -> expression;
IfStatement:statement -> condition:expression body:statement*  elseBody:statement*;
While:statement ->condition:expression body:statement*;
Assignment:statement -> left:expression right:expression;
Invocation:statement -> name:string parameters:variable*;
Return:statement -> expression;

ArithmeticExpression:expression -> left:expression operator:string right:expression;
Comparison:expression -> left:expression operator:string right:expression;
And:expression -> left:expression  right:expression;
Or:expression -> left:expression  right:expression;
Not:expression -> expression;
Cast:expression -> type expression;
ArrayAccess:expression -> name:string  position:expression*;
StructFieldAccess:expression -> struct:expression field:string;

Variable:expression -> name:string;
IntValue:expression -> value:string;
FloatValue:expression -> value:string;
CharValue:expression -> value:string;